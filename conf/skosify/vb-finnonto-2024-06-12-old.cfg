# Skosify configuration file for transforming most FinnONTO ontologies into SKOS
#
# Can be used e.g. with the OWL version of the General Finnish Ontology.

# runtime options which correspond to command line parameters
[options]
narrower=True
transitive=False
enrich_mappings=False
aggregates=True
debug=False
break_cycles=True
cleanup_properties=True
cleanup_classes=True
cleanup_unreachable=True
set_modified=True
eliminate_redundancy=True

# Ensure a consistent hierarchy for concepts which are linked to equivalent YSO concepts
# See http://jira.kansalliskirjasto.fi/browse/FINTO-179
# Also filter away recently added YSO concepts that are not yet processed
update_query=
	PREFIX dc11: <http://purl.org/dc/elements/1.1/>
	PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
	PREFIX owl: <http://www.w3.org/2002/07/owl#>
	PREFIX yso: <http://www.yso.fi/onto/yso/>
	PREFIX ysometa: <http://www.yso.fi/onto/yso-meta/2007-03-02/>
	PREFIX ysoupdate: <http://www.yso.fi/onto/yso-update/>
	PREFIX sme-update: <http://www.yso.fi/yso-update/pohjoissaame/>
	PREFIX skosxl: <http://www.w3.org/2008/05/skos-xl#>
	PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

	DELETE {
	  ?g skos:prefLabel ?sLabel .
	  ?g skos:altLabel ?sLabel .
	  ?h ?labelProp ?smeLabel .
	  yso:p16222 skos:topConceptOf yso: .
	  yso:p5565 skos:topConceptOf yso: .
	  yso: skos:hasTopConcept ?concept .
	  ?concept skos:topConceptOf yso: .
	  ?concept skos:inScheme yso: .
	  yso:c_523ba861 ?tempPredicate ?tempObject .
	  ?tempResource ?tempPredicate2 yso:c_523ba861 .
	  <http://semanticturkey.uniroma2.it/ns/change-tracker#commit-metadata> ?pp ?oo .
	}
	INSERT {
	  ?a rdfs:subClassOf ?parent .
	  ?new a ysometa:StructuringClass .
	  ?h ?labelProp ?seLabel .
	  ?xl a skosxl:Label .
	  ?xl skos:inScheme yso: .
	  ?xl skosxl:literalForm ?sourcedSeLabel .
	  ?xl dc11:source ?msg .
	  ?c skosxl:prefLabel ?xl .
	}
	WHERE {
	  {
	    ?a owl:equivalentClass ?b .
	    ?b rdfs:subClassOf|ysometa:deprecatedReplacedBy/rdfs:subClassOf ?parent .
	    FILTER (!STRSTARTS(STR(?a), "http://www.yso.fi/onto/yso/"))
	    FILTER (STRSTARTS(STR(?parent), "http://www.yso.fi/onto/yso/"))
	  }
	  UNION
	  {
	    ?new rdfs:subClassOf ysoupdate:uudet .
	  }
	  UNION
	  {
	    # Remove unfinished Sami-labels
	    ?g skos:prefLabel|skos:altLabel ?sLabel .
	    ?g rdfs:subClassOf sme-update:tarkistettavat .
	    FILTER (LANGMATCHES ('sme', LANG(?sLabel)) || LANGMATCHES ('se', LANG(?sLabel)))
	  }
	  UNION
	  {
	    # @sme -> @se
	    ?h ?labelProp ?smeLabel .
	    BIND (STRLANG (STR(?smeLabel), 'se') AS ?seLabel)
	    FILTER( LANGMATCHES('sme', LANG(?smeLabel)) )
	    FILTER NOT EXISTS { ?h rdfs:subClassOf sme-update:tarkistettavat . }
	  }
	  UNION
	  # Add skosxl labels with source information for Sami-concepts
	  {
	    VALUES (?structuring ?msg)
	      { (ysoupdate:GG "S치mi Giellag치ldu, TermWiki. https://satni.uit.no/termwiki"@se)
	        (ysoupdate:PS "Pekka Sammallahti, S치mi-suoma s치tnegirji. Davvi Girji, 2021. https://satni.org/sammallahtismefin"@se) }
	    ?c rdfs:subClassOf ?structuring ;
	    skos:prefLabel ?sourcedLabel .
	    FILTER (LANGMATCHES ('sme', LANG(?sourcedLabel)) || LANGMATCHES ('se', LANG(?sourcedLabel)))
	    BIND (STRLANG (STR(?sourcedLabel), 'se') AS ?sourcedSeLabel)
	    BIND (URI(CONCAT(STR(?c),'#sme_1')) AS ?xl)
	  }
	  UNION
	  {
	    ?concept skos:inScheme yso:deprecatedconceptscheme .
	    ?concept skos:inScheme yso: .
	  }
	}


# define custom RDF namespaces that can then be used in the mappings below (and will also be used in the output file)
# Note that common namespaces are already defined: rdf, rdfs, owl, skos, dc, dct
[namespaces]
# YSO concept namespace
yso=http://www.yso.fi/onto/yso/
# YSO metaschema namespace
ysometa=http://www.yso.fi/onto/yso-meta/2007-03-02/
# public YSO metaschema namespace
yso-meta=http://www.yso.fi/onto/yso-meta/
# FinnONTO SKOS Extensions namespace
skosext=http://purl.org/finnonto/schema/skosext#
# YSO translation namespace
ysotranslate=http://www.yso.fi/onto/yso-translate/
# YSO update namespace
ysoupdate=http://www.yso.fi/onto/yso-update/
# YSO-kehitys namespace
ysokehitys=http://www.yso.fi/onto/yso-kehitys/
# ISO 25964 SKOS extensions
isothes=http://purl.org/iso25964/skos-thes#
# RDA Unconstrained properties
rdau=http://rdaregistry.info/Elements/u/
termed=termed:property:

# define what to do with types in the source vocabulary, i.e. how these map to SKOS constructs
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the instances)
# the <key> instances will be replaced with <value> instances.
# key may start with * which matches any localname prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[types]
Concept=skos:Concept,yso-meta:Concept
ysometa.Concept=skos:Concept,yso-meta:Concept
ysometa.Individual=skos:Concept,yso-meta:Individual
ysometa.Hierarchy=skos:Concept,yso-meta:Hierarchy
AggregateConcept=skos:Concept
DeprecatedConcept=skosext:DeprecatedConcept
owl.DeprecatedClass=skosext:DeprecatedConcept
DeprecatedAggregateConcept=skosext:DeprecatedConcept
*Concept=skos:Concept
*concept=skos:Concept
GroupConcept=isothes:ThesaurusArray,skos:Collection
*GroupConcept=isothes:ThesaurusArray,skos:Collection
*groupConcept=isothes:ThesaurusArray,skos:Collection
StructuringClass=
*StructuringClass=
# YSO,JUHO thematic groups
ThematicGroup=isothes:ConceptGroup,skos:Collection

# define what to do with literal properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[literals]
ysometa.prefLabel=skosext:candidateLabel
prefLabel=skos:prefLabel
# at least TAO and VALO use rdfs:label
rdfs.label=skos:prefLabel
altLabel=skos:altLabel
oldLabel=skos:altLabel
hiddenLabel=skos:hiddenLabel
note=skos:note
editorialNote=
skos.editorialNote=
comment=skos:scopeNote
ysaComment=skos:scopeNote
description=skos:scopeNote
tempLabel=
semanticTag=
semanticSvTag=
semTag=
semSvTag=
overlaps=
overlappedBy=
overlapsDefinition=
overlappedByDefinition=
ysaSource=dc:source
ysoSource=dc:source
allsoSource=dc:source
source=dc:source
eiYsa=
order=
creator=
date=dc:date
definition=skos:definition
deprecatedLabel=skos:hiddenLabel
# singular labels become skos:hiddenLabels
ysometa.singularPrefLabel=skos:hiddenLabel,yso-meta:singularPrefLabel
ysometa.singularAltLabel=skos:hiddenLabel,yso-meta:singularAltLabel
#old preferred labels (usually with a specifier) are kept along as hidden labels
# YSO/TBC language specific properties
skos.prefLabel_EN=skos:prefLabel
skos.prefLabel_SV=skos:prefLabel
skos.altLabel_EN=skos:altLabel
skos.altLabel_SV=skos:altLabel
# define what to do with relation properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[relations]
rdfs.subClassOf=skos:broader
owl.equivalentClass=skos:exactMatch
definedConcept=skos:closeMatch
partOf=skosext:partOf
broaderGeneric=skosext:broaderGeneric
broaderPartitive=skosext:broaderPartitive
exactMatch=skos:exactMatch
closeMatch=skos:closeMatch
narrowMatch=skos:narrowMatch
relatedMatch=skos:relatedMatch
related=skos:related
associativeRelation=skos:related
uusiAssociativeRelation=skos:related
deprecatedSubClassOf=skos:broadMatch
deprecatedSuperClassOf=
deprecatedAssociativeRelation=skos:relatedMatch
deprecatedReplacedBy=dct:isReplacedBy
# Deleting YSO update properties
ysoupdate.newBroader=
ysoupdate.removedBroader=
ysoupdate.newRelated=
ysoupdate.removedRelated=
ysoupdate.newGroup=
ysoupdate.removedGroup=
ysoupdate.newCloseMatch=
ysoupdate.removedCloseMatch=
ysoupdate.newExactMatch=
ysoupdate.removedExactMatch=
ysoupdate.newSuccessor=

#old-style YSO mapping http://www.yso.fi/onto/yso/peilaus/2007-03-02/definedConcep which was purified as yso:p23806
yso:p23805=

# group membership property - represent with inverse skos:member relation
hasThematicGroup=^skos:member

# successor/predecessor properties should be used both ways
rdau.P60686=rdau.P60686,^rdau.P60683
rdau.P60683=rdau.P60683,^rdau.P60686
