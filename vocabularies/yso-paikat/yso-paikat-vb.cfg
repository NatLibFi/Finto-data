# Skosify configuration file for transforming simple OWL or RDFS ontologies into SKOS

# runtime options which correspond to command line parameters
[options]
narrower=True
transitive=False
enrich_mappings=False
aggregates=True
debug=False
break_cycles=True
cleanup_properties=True
cleanup_classes=True
cleanup_unreachable=True
set_modified=True
eliminate_redundancy=True
mark_top_concepts=True

update_query=
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>
    PREFIX yso: <http://www.yso.fi/onto/yso/>
    PREFIX ysometa: <http://www.yso.fi/onto/yso-meta/>
    PREFIX ysoupdate: <http://www.yso.fi/onto/yso-update/>
    PREFIX wgs84: <http://www.w3.org/2003/01/geo/wgs84_pos#>
    PREFIX dc11: <http://purl.org/dc/elements/1.1/>
    PREFIX dct: <http://purl.org/dc/terms/>
    PREFIX wd: <http://www.wikidata.org/entity/>
    PREFIX pnr: <http://paikkatiedot.fi/so/1000772/>

    DELETE {
      ?a ?b ?c .
      ?d skos:prefLabel "NYTT BEGREPP"@sv .
      ?cmatch ?p ?o .
      yso: ?g ?h .
    }
    INSERT {
      ?sub wgs84:lat ?lat .
      ?sub wgs84:long ?long .
      ?sub dc11:source ?fisource .
      ?sub dc11:source ?svsource .
      ?sub dc11:source ?ensource .
      ?sub ysometa:wikidataPlaceType ?wtype .
      ?sub ysometa:mmlPlaceType ?mtype .
	} WHERE {
      {
        ?a ?b ?c .
        FILTER (STRSTARTS( STR(?a), STR(ysoupdate:) ) || STRSTARTS( STR(?c), STR(ysoupdate:) ))
      } UNION {
        ?d skos:prefLabel "NYTT BEGREPP"@sv .
      } UNION {
        ?a skos:closeMatch ?g .
        FILTER NOT EXISTS { ?a a skos:Concept . }
        ?a ?b ?c .
      } UNION {
        ?sub a skos:Concept .
        ?sub skos:closeMatch|skos:relatedMatch ?cmatch .
        FILTER(STRSTARTS(STR(?cmatch), STR(pnr:)))
        FILTER NOT EXISTS {
          ?sub skos:closeMatch|skos:relatedMatch ?cmatch2 .
          FILTER (str(?cmatch2) < str(?cmatch) && STRSTARTS(STR(?cmatch2), STR(pnr:)))}
        ?cmatch wgs84:lat ?lat .
        ?cmatch wgs84:long ?long .
        BIND (STRLANG("Sijaintitietojen lähde: Maanmittauslaitoksen paikannimirekisteri.", "fi") as ?fisource)
        BIND (STRLANG("Källa för positionsinformation: Lantmäteriverkets ortnamnsregister.", "sv") as ?svsource)
        BIND (STRLANG("Location information source: Place Name Register of the National Land Survey of Finland.", "en") as ?ensource)
      } UNION {
        ?sub a skos:Concept .
        ?sub skos:closeMatch|skos:relatedMatch ?cmatch .
        FILTER(STRSTARTS(STR(?cmatch), STR(wd:)))
        ?cmatch wgs84:lat ?lat .
        ?cmatch wgs84:long ?long .
        FILTER NOT EXISTS { ?sub skos:closeMatch|skos:relatedMatch ?cmatch2 .
          FILTER(
            (STRSTARTS(STR(?cmatch2), STR(pnr:)))
            ||
            (str(?cmatch2) < str(?cmatch) && STRSTARTS(STR(?cmatch2), STR(wd:))))}
        BIND (STRLANG("Sijaintitietojen lähde: Wikidata.", "fi") as ?fisource)
        BIND (STRLANG("Källa för positionsinformation: Wikidata.", "sv") as ?svsource)
        BIND (STRLANG("Location information source: Wikidata.", "en") as ?ensource)
      } UNION {
        ?sub skos:closeMatch|skos:relatedMatch ?cmatch .
        ?cmatch ?p ?o .
        OPTIONAL { ?cmatch ysometa:wikidataPlaceType ?wtype }
        OPTIONAL { ?cmatch ysometa:mmlPlaceType ?mtype }
      } UNION {
	yso: ?g ?h .	
      }
    }
# define custom RDF namespaces that can then be used in the mappings below (and will also be used in the output file)
# Note that common namespaces are already defined: rdf, rdfs, owl, skos, dc, dct
[namespaces]
yso=http://www.yso.fi/onto/yso/
owl=http://www.w3.org/2002/07/owl#
rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#
rdfs=http://www.w3.org/2000/01/rdf-schema#
iso-thes=http://purl.org/iso25964/skos-thes#
xsd=http://www.w3.org/2001/XMLSchema#
wgs84=http://www.w3.org/2003/01/geo/wgs84_pos#
wd=http://www.wikidata.org/entity/

# define what to do with types in the source vocabulary, i.e. how these map to SKOS constructs
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the instances)
# the <key> instances will be replaced with <value> instances.
# key may start with * which matches any localname prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[types]
#owl.Class=skos:Concept
owl.Ontology=skos:ConceptScheme
StructuringClass=

# define what to do with literal properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[literals]
rdfs.label=skos:prefLabel
#rdfs.comment=skos:definition
skos.editorialNote=

# define what to do with relation properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[relations]
rdfs.subClassOf=skos:broader
iso-thes.broaderPartitive=iso-thes:broaderPartitive,^iso-thes:narrowerPartitive
