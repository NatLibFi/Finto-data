# Skosify configuration file for transforming Krono to SKOS
# runtime options which correspond to command line parameters
[options]
narrower=True
transitive=False
enrich_mappings=False
aggregates=True
debug=False
break_cycles=True
cleanup_properties=True
cleanup_classes=True
cleanup_unreachable=True
set_modified=True
eliminate_redundancy=True
mark_top_concepts=False

# define custom RDF namespaces that can then be used in the mappings below (and will also be used in the output file)
# Note that common namespaces are already defined: rdf, rdfs, owl, skos, dc, dct
[namespaces]
# YSO concept namespace
yso=http://www.yso.fi/onto/yso/
# YSO metaschema namespace
ysometa=http://www.yso.fi/onto/yso-meta/2007-03-02/
# public YSO metaschema namespace
yso-meta=http://www.yso.fi/onto/yso-meta/
#KRONO metaschema namespace
krono-meta=http://www.yso.fi/onto/krono-meta/
# ISO 25964 SKOS extensions
isothes=http://purl.org/iso25964/skos-thes#
# Schema.org used for startDate and endDate
schema=http://schema.org/

# define what to do with types in the source vocabulary, i.e. how these map to SKOS constructs
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the instances)
# the <key> instances will be replaced with <value> instances.
# key may start with * which matches any localname prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[types]
Concept=skos:Concept
AggregateConcept=skos:Concept
*Concept=skos:Concept
*concept=skos:Concept
GroupConcept=isothes:ThesaurusArray,skos:Collection
*GroupConcept=isothes:ThesaurusArray,skos:Collection
*groupConcept=isothes:ThesaurusArray,skos:Collection
StructuringClass=
*StructuringClass=

# define what to do with literal properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[literals]
prefLabel=skos:prefLabel
# at least TAO and VALO use rdfs:label
rdfs.label=skos:prefLabel
altLabel=skos:altLabel
oldLabel=skos:altLabel
hiddenLabel=skos:hiddenLabel
note=skos:note
editorialNote=
skos.editorialNote=
comment=skos:scopeNote
ysaComment=skos:scopeNote
description=skos:scopeNote
tempLabel=
semanticTag=
semanticSvTag=
semTag=
semSvTag=
overlaps=
overlappedBy=
overlapsDefinition=
overlappedByDefinition=
source=dc:source
order=
creator=
date=dc:date
definition=skos:definition
deprecatedLabel=skos:hiddenLabel
#old preferred labels (usually with a specifier) are kept along as hidden labels
ysometa.oldPrefLabel=skos:hiddenLabel
# Deleting YSO update properties

# define what to do with relation properties on Concepts
# key: CURIE or localname (string)
# value: CURIE or empty (to delete the property)
# the <key> properties will be replaced with <value> properties
# key may start with * which matches any prefix
# Note: use period '.' instead of colon ':' as separator in key CURIEs
[relations]
rdfs.subClassOf=skos:broader
owl.equivalentClass=skos:exactMatch
broaderGeneric=isothes:broaderGeneric,skos:broader
broaderPartitive=isothes:broaderPartitive,skos:broader
narrowerGeneric=isothes:narrowerGeneric,skos:narrower
narrowerPartitive=isothes:narrowerPartitive,skos:narrower
exactMatch=skos:exactMatch
closeMatch=skos:closeMatch
narrowMatch=skos:narrowMatch
relatedMatch=skos:relatedMatch
related=skos:related
associativeRelation=skos:related
uusiAssociativeRelation=skos:related
deprecatedSubClassOf=skos:broadMatch
deprecatedSuperClassOf=
deprecatedAssociativeRelation=skos:relatedMatch
deprecatedReplacedBy=dct:isReplacedBy
# TAO uses these:
RT=skos:related
LT=
ST=
KÄYTÄ=


#old-style YSO mapping http://www.yso.fi/onto/yso/peilaus/2007-03-02/definedConcep which was purified as yso:p23806
yso:p23805=

# group membership property - represent with inverse skos:member relation
hasThematicGroup=^skos:member
