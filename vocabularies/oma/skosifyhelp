Usage: skosify [options] voc1 [voc2 ...]

Options:
  -h, --help            show this help message and exit
  -c CONFIG, --config=CONFIG
                        Read default options and transformation definitions
                        from the given configuration file.
  -o OUTPUT, --output=OUTPUT
                        Output file name. Default is "-" (stdout).
  -D, --debug           Show debug output.
  -d, --no-debug        Hide debug output.
  -O LOG, --log=LOG     Log file name. Default is to use standard error.

  Input and Output Options:
    -f FROM_FORMAT, --from-format=FROM_FORMAT
                        Input format. Default is to detect format based on
                        file extension. Possible values: xml, n3, turtle,
                        nt...
    -F TO_FORMAT, --to-format=TO_FORMAT
                        Output format. Default is to detect format based on
                        file extension. Possible values: xml, n3, turtle,
                        nt...
    --update-query=UPDATE_QUERY
                        SPARQL update query. This query is executed against
                        the input data before processing it. The value can be
                        either the actual query, or "@filename".
    --construct-query=CONSTRUCT_QUERY
                        SPARQL CONSTRUCT query. This query is executed against
                        the input data (after possible --update-query) and the
                        result graph is used as the actual input. The value
                        can be either the actual query, or "@filename".
    --post-update-query=POST_UPDATE_QUERY
                        SPARQL update query. This convenience query is
                        executed against the output data before writing it.
                        The value can be either the actual query, or
                        "@filename". Use at your own risk - output may not be
                        SKOS at all.
    -I, --infer         Perform RDFS subclass/subproperty inference before
                        transforming input.
    -i, --no-infer      Don't perform RDFS subclass/subproperty inference
                        before transforming input.

  Concept Scheme and Labelling Options:
    -s NAMESPACE, --namespace=NAMESPACE
                        Namespace of vocabulary (usually optional; used to
                        create a ConceptScheme)
    -L LABEL, --label=LABEL
                        Label/title for the vocabulary (usually optional; used
                        to label a ConceptScheme)
    -l DEFAULT_LANGUAGE, --default-language=DEFAULT_LANGUAGE
                        Language tag to set for labels with no defined
                        language.
    -p PREFLABEL_POLICY, --preflabel-policy=PREFLABEL_POLICY
                        Policy for handling multiple prefLabels with the same
                        language tag. Possible values: shortest, longest,
                        lowercase, uppercase, all. Can also be a comma-
                        separated list of policies to apply in order.
    --set-modified      Set modification date on the ConceptScheme
    --no-set-modified   Don't set modification date on the ConceptScheme

  Vocabulary Structure Options:
    -E, --mark-top-concepts
                        Mark top-level concepts in the hierarchy as top
                        concepts (entry points).
    -e, --no-mark-top-concepts
                        Don't mark top-level concepts in the hierarchy as top
                        concepts.
    -N, --narrower      Include narrower/narrowerGeneric/narrowerPartitive
                        relationships in the output vocabulary.
    -n, --no-narrower   Don't include
                        narrower/narrowerGeneric/narrowerPartitive
                        relationships in the output vocabulary.
    -T, --transitive    Include transitive hierarchy relationships in the
                        output vocabulary.
    -t, --no-transitive
                        Don't include transitive hierarchy relationships in
                        the output vocabulary.
    -M, --enrich-mappings
                        Perform SKOS enrichments on mapping relationships.
    -m, --no-enrich-mappings
                        Don't perform SKOS enrichments on mapping
                        relationships.
    -A, --aggregates    Keep AggregateConcepts completely in the output
                        vocabulary.
    -a, --no-aggregates
                        Remove AggregateConcepts completely from the output
                        vocabulary.
    -R, --keep-related  Keep skos:related relationships within the same
                        hierarchy.
    -r, --no-keep-related
                        Remove skos:related relationships within the same
                        hierarchy.
    -B, --break-cycles  Break any cycles in the skos:broader hierarchy.
    -b, --no-break-cycles
                        Don't break cycles in the skos:broader hierarchy.
    --eliminate-redundancy
                        Eliminate hierarchical redundancy in the skos:broader
                        hierarchy.
    --no-eliminate-redundancy
                        Don't eliminate hierarchical redundancy in the
                        skos:broader hierarchy.

  Cleanup Options:
    --cleanup-classes   Remove definitions of classes with no instances.
    --no-cleanup-classes
                        Don't remove definitions of classes with no instances.
    --cleanup-properties
                        Remove definitions of properties which have not been
                        used.
    --no-cleanup-properties
                        Don't remove definitions of properties which have not
                        been used.
    --cleanup-unreachable
                        Remove triples which can not be reached by a traversal
                        from the main vocabulary graph.
    --no-cleanup-unreachable
                        Don't remove triples which can not be reached by a
                        traversal from the main vocabulary graph.
